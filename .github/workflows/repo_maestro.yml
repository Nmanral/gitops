name: Github repo maestro

on:
  workflow_dispatch:
    inputs:
      repo-name:
        type: string
        description: 'Provide repository name'
        required: true
      description:
        type: string
        description: 'A Short description for your repo'
        required: true
      template-name:
        type: choice
        description: 'Please select a template to build your repository'
        required: true
        options:
          - analytics
          - data-science
          - data-engineering
  
jobs:
  validate-input:
    runs-on: ubuntu-latest

    steps:
      - name: Check repo name
        id: validate-repo-name
        run: |
          repo_name="${{ github.event.inputs.repo-name }}"

          # check if repo name is in lower case
          if [[ $repo_name != ${repo_name,,} ]]; then
            echo "Repository name must be in lowercase."
            exit 1
          fi
          # check for length (not too long for readability)
          if [ ${#repo_name} gt 40 ]; then
            echo "Repository name should be shorter than 30 characters." 
            exit 1
          fi
          # check for kebab-case (contains only lowercase letters, numbers, or hyphes)
          if ! [[ $repo_name =~ ^[a-z0-9]+(-[a-z0-9]+)*$ ]]; then
            echo "Repository name must be in kebab-case (lowercase letters, numbers, and hyphens only)."
            exit 1
          fi
          echo "Repositoryy name is valid"
      
  create-repo:
      needs: validate-input
      runs-on: ubuntu-latest

      steps:
        - name: checkout code
          uses: actions/checkout@v2

        - name: create repository
          id: create-repo
          run: |
            repo_name="${{ github.event.inputs.repo-name }}"
            template_name="${{ github.event.inputs.template-name }}"

            case $template_name in
              "analytics")
                template_repo="analytics-template"
                ;;
              "data-science")
                template_repo="data-science-template"
                ;;
              "data-engineering")
                template_repo="data-engineering-template"
                ;;
              *)
                echo "Invalid template choice: $template_name"
                exit 1
                ;;
            esac

            response=$(curl -L \
                        -X POST \
                        -H "Accept: application/vnd.github+json" \
                        -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                        -H "X-GitHub-Api-Version: 2022-11-28" \
                        https://api.github.com/repos/Nmanral/$(template_repo)/generate \
                        -d '{"owner":"Nmanral","name":"$(repo_name)","description":"${{ github.event.inputs.description }}","include_all_branches":true,"private":false}')

            echo repo_url=$(echo "$response" | jq -r '.htm_url') >> $GITHUB_OUTPUT
            echo repo_name=$(echo "$response" | jq -r '.name') >> $GITHUB_OUTPUT
            echo created_at=$(echo "$response" | jq -r '.created_at') >> $GITHUB_OUTPUT
        
        - name: set branch protection rule
          run: |
            curl -L \
            -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/Nmanral/${{ steps.create-repo.outputs.repo_name }}/branches/main/protection \
            -d '{
              "required_status_checks":{"strict":true,"contexts":["continuous-integration/travis-ci"]},
              "enforce_admins":true,
              "required_pull_request_reviews":{"dismissal_restrictions":{"users":["octocat"],"teams":["justice-league"]},
              "dismiss_stale_reviews":true,
              "require_code_owner_reviews":true,
              "required_approving_review_count":2,
              "require_last_push_approval":true,
              "restrictions":null}'
        
        - name: log details
          run: |
            triggered_by=$GITHUB_ACTOR

            echo '{
              "repository_name": ${{ steps.create-repo.outputs.repo_name }},
              "repository_url": ${{ steps.create-repo.outputs.repo_url }}
              "creation_timestamp": ${{ steps.create-repo.outputs.created_at }},
              "created_by": "'${triggered_by}'"
            }' >> logs/repo_creation_logs.json

            git config --global user.email "github-actions[bot]@example.com"
            git config --global user.name "Github Actions"
            git add logs/repo_creation_logs.json
            git commit -m "Update repo_creation_logs.json with new repository information"
            git push origin $GITHUB_REF

            cat logs/repo_creation_logs.json


